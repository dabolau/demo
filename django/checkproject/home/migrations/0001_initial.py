# Generated by Django 2.0.1 on 2018-04-19 11:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bjs_base_battery_mainframe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_appearance', models.SmallIntegerField(choices=[(1, '正常'), (0, '不正常')], verbose_name='电池外观检查（有无鼓包、起泡、漏夜）')),
                ('battery_connection_line', models.SmallIntegerField(choices=[(1, '正常'), (0, '不正常')], verbose_name='电池连接线检查（是否牢固）')),
                ('battery_temperature', models.CharField(max_length=3, verbose_name='电池表面温度（摄氏度）')),
                ('battery_number', models.CharField(max_length=3, verbose_name='目前电池使用组数')),
            ],
        ),
        migrations.CreateModel(
            name='Bjs_base_battery_power_mainframe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('load_powered', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='LOAD POWERED')),
                ('check_log', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='CHECK LOG')),
                ('warning', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='WARNING')),
                ('critical', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='CRITICAL')),
                ('warning_number', models.CharField(max_length=3, verbose_name='告警条数')),
                ('warning_content', models.CharField(max_length=32, verbose_name='警告内容')),
                ('time_calibration', models.SmallIntegerField(choices=[(1, '正常'), (0, '不正常')], verbose_name='时间校准')),
                ('ups_state', models.CharField(max_length=32, verbose_name='UPS STATE')),
                ('volts_in1', models.CharField(max_length=32, verbose_name='VOLTS IN1')),
                ('volts_in2', models.CharField(max_length=32, verbose_name='VOLTS IN2')),
                ('volts_in3', models.CharField(max_length=32, verbose_name='VOLTS IN3')),
                ('volts_out1', models.CharField(max_length=32, verbose_name='VOLTS OUT1')),
                ('volts_out2', models.CharField(max_length=32, verbose_name='VOLTS OUT2')),
                ('volts_out3', models.CharField(max_length=32, verbose_name='VOLTS OUT3')),
                ('amps1', models.CharField(max_length=32, verbose_name='AMPS1')),
                ('amps2', models.CharField(max_length=32, verbose_name='AMPS2')),
                ('amps3', models.CharField(max_length=32, verbose_name='AMPS3')),
                ('load_power1', models.CharField(max_length=32, verbose_name='负载功率1')),
                ('load_power2', models.CharField(max_length=32, verbose_name='负载功率2')),
                ('load_power3', models.CharField(max_length=32, verbose_name='负载功率3')),
                ('battery_output_power1', models.CharField(max_length=32, verbose_name='蓄电池输出功率1')),
                ('battery_output_power2', models.CharField(max_length=32, verbose_name='蓄电池输出功率2')),
                ('battery_output_power3', models.CharField(max_length=32, verbose_name='蓄电池输出功率3')),
                ('ups_load', models.CharField(max_length=32, verbose_name='UPS LOAD(%)')),
                ('power_modules_total', models.CharField(max_length=32, verbose_name='POWER MODULES TOTAL')),
                ('power_modules_bad', models.CharField(max_length=32, verbose_name='POWER MODULES BAD')),
                ('power_modules_capacity', models.CharField(max_length=32, verbose_name='POWER MODULES CAPACITY(%VA)')),
                ('power_modules_redundancy', models.CharField(max_length=32, verbose_name='POWER MODULES REDUNDANCY')),
                ('battery_modules_runtime', models.CharField(max_length=32, verbose_name='BATTERY MODULES RUNTIME')),
                ('battery_modules_capacity', models.CharField(max_length=32, verbose_name='BATTERY MODULES CAPACITY(%)')),
            ],
        ),
        migrations.CreateModel(
            name='Bjs_base_dual_power_switching',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vab', models.CharField(max_length=32, verbose_name='1-2')),
                ('vbc', models.CharField(max_length=32, verbose_name='2-3')),
                ('vca', models.CharField(max_length=32, verbose_name='3-1')),
                ('van', models.CharField(max_length=32, verbose_name='1-N')),
                ('vbn', models.CharField(max_length=32, verbose_name='2-N')),
                ('vcn', models.CharField(max_length=32, verbose_name='3-N')),
                ('la', models.CharField(max_length=32, verbose_name='L1')),
                ('lb', models.CharField(max_length=32, verbose_name='L2')),
                ('lc', models.CharField(max_length=32, verbose_name='L3')),
                ('ln', models.CharField(max_length=32, verbose_name='N')),
                ('voltage', models.CharField(max_length=32, verbose_name='电压')),
                ('current', models.CharField(max_length=32, verbose_name='电流')),
                ('powerful', models.CharField(max_length=32, verbose_name='功率')),
                ('city1', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='市电1指示灯')),
                ('city2', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='市电2指示灯')),
                ('cityout', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='市电输出指示灯')),
            ],
        ),
        migrations.CreateModel(
            name='Bjs_base_other_situation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.CharField(max_length=3, verbose_name='环境温度（摄氏度）')),
                ('smell', models.SmallIntegerField(choices=[(1, '正常'), (0, '不正常')], verbose_name='设备室有无异味')),
                ('fire_equipment', models.SmallIntegerField(choices=[(1, '正常'), (0, '不正常')], verbose_name='消防设施设备外观检查')),
                ('epilog', models.CharField(max_length=64, verbose_name='巡检结论')),
            ],
        ),
        migrations.CreateModel(
            name='Bjs_base_power_off_mainframe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour_05', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='0.5小时供电指示灯')),
                ('hour_10', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='1小时供电指示灯')),
                ('bypass_supply', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='旁路供电指示灯')),
                ('timing_start', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='计时启动指示灯')),
                ('ups_output_switch', models.SmallIntegerField(choices=[(11, '白灯'), (12, '红灯'), (13, '绿灯'), (14, '橙灯'), (21, '白闪'), (22, '红闪'), (23, '绿闪'), (24, '橙闪'), (99, '灭')], verbose_name='蓄电池输出指示灯')),
            ],
        ),
        migrations.CreateModel(
            name='Bjs_base_step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(auto_now=True, verbose_name='结束时间')),
                ('bjs_base_battery_mainframe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Bjs_base_battery_mainframe', verbose_name='电池柜')),
                ('bjs_base_battery_power_mainframe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Bjs_base_battery_power_mainframe', verbose_name='蓄电池电源主机柜')),
                ('bjs_base_dual_power_switching', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Bjs_base_dual_power_switching', verbose_name='双电源切换柜')),
                ('bjs_base_other_situation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Bjs_base_other_situation', verbose_name='巡检记事')),
                ('bjs_base_power_off_mainframe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.Bjs_base_power_off_mainframe', verbose_name='分时下电柜')),
                ('check_man', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='巡检人员')),
            ],
        ),
    ]
